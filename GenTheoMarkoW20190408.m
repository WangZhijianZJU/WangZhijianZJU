% logit_dyn_090A modified from logit_dyn_0909
% from 
%     p=c_a./sum(c_a);
%     q=c_b./sum(c_b);
% to 
%     p=c_a./sum(c_a)*0.1 + p.*0.9;
%     q=c_b./sum(c_b)*0.1 + q.*0.9;
% 
% from % C:\Users\Think\Desktop\新建文件夹 (2)\logit_dyn_090A.m
% function anan=logit_dyn_090A(A,k,repeat) add w as parameter
% function anan=logit_dyn_090B(A,Lambda,repeat,wlogit)
%% Using Markov generated by dynamics to evaluate distribution 
% 20180910 
% %         A = payoff88(2,1); Lambda=128; repeat=100;  wlogit=0.02; %6 
% %         Lambda=128; repeat=100;  wlogit=0.02; %6 
% fLatex4 =
% 
%     6.0000   21.0000   81.0000   24.0000   22.0000    5.3935    4.1846   54.4017    3.4923   67.4721    3.4923
%     6.0000   21.0000   84.0000   24.0000   22.0000   36.3772   19.1681   54.4017    3.4923  113.4394    3.4923
%     6.0000   21.0000   84.0000   82.0000   22.0000   36.3772    3.8361    3.0473    3.4923   46.7530    3.0473
%     6.0000   22.0000   52.0000   24.0000   64.0000   88.5423   74.1734   38.9879  124.8744  326.5779   38.9879
%     6.0000   22.0000   52.0000   54.0000   24.0000   88.5423    7.3861   40.4136   54.4017  190.7436    7.3861
%     6.0000   22.0000   54.0000   24.0000   64.0000   29.8293   40.4136   38.9879  124.8744  234.1052   29.8293
%     6.0000   22.0000   62.0000   24.0000   64.0000   89.6432   27.6091   38.9879  124.8744  281.1146   27.6091
%     6.0000   22.0000   62.0000   54.0000   24.0000   89.6432    3.5999   40.4136   54.4017  188.0583    3.5999

function [rM64x64 v disMarkov]= GenTheoMarkoW20190408(A,Lambda,repeat,wlogit)
% %         A = payoff88(2,1); 
% %         Lambda=128; repeat=100;  wlogit=0.02; %6
        rM64x64=funGenTheoMarkov20190408(A,Lambda,repeat,wlogit);
        v = 1/64 * ones(1,64) * rM64x64^10000000;
        V=zeros(8);for i = 1:8; V(i,:)= v((i-1)*8+1:(i-1)*8+8);end
%  Stationary distribution on [X8 ; Y8] strategy 
        display 'Markov - Stationary distribution on [X8 ; Y8] strategy '
        disMarkov = [1:8; sum(V'); sum(V)]'
%         rr = ExpeAndContiModelData() 
%         display 'Experiment - Stationary distribution on [X8 ; Y8] strategy '
%         disExpe = rr(:,1:2)
%         display 'ContiModel - Stationary distribution on [X8 ; Y8] strategy '
%         disContiModel = rr(:,3:4)
%  stationary distribution on 64 social-state         
        [a b]=eig(rM64x64'); 
        cc = [1:64; a(:,1)'/sum(a(:,1)); v]' 
end

function r = ExpeAndContiModelData()
r=[ ...
0.707	0.0513		0.842470367	0.02536562
0.1703	0.1858		0.087409584	0.239208516
0.0123	0.02		3.73225E-05	0.053085462
0.0113	0.6362		3.87235E-06	0.500618349
0.0388	0.0258		0.063488564	0.005633162
0.0158	0.0253		0.006587186	0.053123102
0.0252	0.0107		2.81262E-06	0.011789147
0.0192	0.0448		2.9182E-07	0.111176642
]; 
end


function rM64x64=funGenTheoMarkov20190408(A,Lambda,repeat,wlogit)
%   A = payoff88(3,2); 
%   Lambda=128; repeat=100;  wlogit=0.001; %6
  M64x64=zeros(64); 
  listT=[];
  for I=1:8
      for J=1:8
          p=zeros(1,8);   q=zeros(1,8); 
          p(I)=1;q(J)=1; 
          anan=logit_dyn_090C20190408(A,Lambda,repeat,wlogit,p,q);
          anan=anan(repeat,:);
          listT=[listT; anan];
          MoneRow=[];
          for K=1:8
             MoneRow=[MoneRow anan(K)*anan(9:16)];
          end
          M64x64((I-1)*8+J,:) = MoneRow; 
      end
  end
  rM64x64 = M64x64;
  %% test c16 col1-16 =?= listT co;1-16? YES!! 
  c16=[];
  for j=1:64; a= []; b= []; 
      for i=1:8; 
          a = [a  sum(M64x64(j, (i-1)*8+1:(i-1)*8+8))];b= [b  sum(M64x64(j,i:8:64))];
      end; 
      c16=[c16; a b]; 
%       V=zeros(8);for i = 1:8; V(i,:)= v0((i-1)*8+1:(i-1)*8+8);end
  end

end


function anan=logit_dyn_090C20190408(A,Lambda,repeat,wlogit,p,q)
%%logit_dyn_0909(payoff88(2,1),6,100)
%%anan=[p1-8 q9-16 p_sum17-24 q_sum25-32];

pay_a=A/6;
pay_b=-A'/6;

%%
%
%初始
% p=[0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125];
% q=[0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125];

Ua=zeros(1,8);
Ub=zeros(1,8);

p_sum=zeros(1,8);
q_sum=zeros(1,8); 

anan=[];

for ri=1:repeat
    for i=1:8
        Ua(i)=sum(q.*pay_a(i,:));
		Ub(i)=sum(p.*pay_b(i,:));	
    end
    p_sum=p_sum+p;
	q_sum=q_sum+q;		
    
    c_a=exp(Lambda*Ua);
    c_b=exp(Lambda*Ub);
    
%     p=c_a./sum(c_a)*0.1 + p.*0.9;
%     q=c_b./sum(c_b)*0.1 + q.*0.9;
    p=c_a./sum(c_a)*wlogit + p.*(1-wlogit);
    q=c_b./sum(c_b)*wlogit + q.*(1-wlogit);
        
    anan=[anan;p q p_sum q_sum];
end
end
    
% function r=payoff88()
%   r= fpayoff88(2,1) %6
% payoff88(3,2) %8
% payoff88(4,2) %10 
% end  C:\Users\Think\Desktop\payoff88.m


function P=payoff88(n,m)

P=zeros(8,8);

Stra=zeros(8,3);

for i=0:7
    tem=dec2bin(i,3);
    Stra(i+1,1)=str2num(tem(1));
    Stra(i+1,2)=str2num(tem(2));
    Stra(i+1,3)=str2num(tem(3));
end

situa=[];
situa_n=0;
for i=1:3
    for j=1:3
        if i==j
            continue
        end
        situa=[situa;i j];
        situa_n=situa_n+1;
    end
end

for i=1:8%for Ann %算Anan的收益
    for j=1:8 %for Bob
        for k=1:situa_n
            if Stra(i,situa(k,1))==0
                P(i,j)=P(i,j)+sign(situa(k,1)-situa(k,2))*m;
            else
                if Stra(j,situa(k,2))==0
                    P(i,j)=P(i,j)+1;
                else
                    P(i,j)=P(i,j)+sign(situa(k,1)-situa(k,2))*n;
                end
            end
        end
    end
end


end

